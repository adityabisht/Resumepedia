Peter Wusoftware engineer, performance engineer.San Diego, CA - Email me on Indeed: indeed.com/r/Peter-Wu/f1d5f97fcb02106bWORK EXPERIENCESoftware DeveloperVerimatrix - San Diego, CA - January 2013 to PresentResponsibilities〓 Developed library for client side apps and plugin on multiple OS(Android, Windows, iOS and Mac OS)〓 Designed and developed software for managing premium video content using OOD software design principles, C++ programming, in Windows and Linux systems.〓 Initiated and developed distributed cache into our current server architectures, and improved the overall performance by 40%. C++ and Python programming, Redhat Linux.〓 Lead discussions dealing with architectures, specifications, testing and design reviews.〓 Developed software using multi-thread programming, network programming and parallel programming to enhance server's overall performance, efficiency and sustainability.〓 Developed new algorithms and software and re-architect current designs to meet customer needs and corporate targets.Skills Usedc++,java, object c, python, network programming, parallel programming, and multi-thread programming.Performance engineerWebsense - July 2011 to Present•〓 Designed high performance methodology for product lines, Excel programming.〓 Designed and Performed baseline test, stress test, stability test, concurrent connection test and sizing test. Spirent Avalanche test environment.〓 Designed mathematical models to evaluate the performance of Websense web filter proxy; benchmarked the rated performance with HTTP/HTTPS protocols.〓 Investigated the bottleneck and performance limitations in complex network with Wireshark and tcpdump. 〓 Designed and implemented automation tools for current performance test environment PERL, TCL, VB, and SHELL programming; Windows and Linux.Research AssistantIndiana University - June 2009 to August 2010〓 Developed self-learning facial and emotion recognition system, Python programming.〓 Reduced the average computation time by 60% through “master-slave” parallel programming paradigm on the facial recognition system, Python programming.Software Quality Assurance EngineerSymantec Software - September 2005 to August 2007Wrote project proposals, test plans, test cases for new projects• Automatic tool development for stress test.• Perl, Bash(Linux), and C/C++ programming• Network management, Cisco switches, 802.1X authentication, and TCP/IP.￼EDUCATIONMasters of Science in Applied Mathematics and Computer ScienceIndiana University South Bend September 2009 to May 2011Bachelor of Science in Electronic and Information EngineeringHuazhong University of Science and Technology - San Diego, CA September 2001 to June 2005SKILLSCOMPUTER SKILLS 〓 C/C++, Java, Python, Ruby, Perl, TCL, and BASH. 〓 HLS, DRM, MPEG-DASH, media content protection, link protection. 〓 Linux, Windows, iOS develop environment 〓 Perforce, Git, CVS, OnTime, Devtrack, Sharepoint. 〓 Databases such as Oracle, MySQL, SQL. 〓 Agile/scrum software development methodologies. 〓 TCP/IP, HTTP/HTTPS. 〓 Virtual Studio, Eclipse, Android Studio, Xcode 6, VMwareADDITIONAL INFORMATIONMASTER COURSE AND PROJECT EXPERIENCEComputer Structure:Used Pentium assembly language and a python tool as a translator to program an artificial intelligent robot which can find its way out of a maze.Computer Network:Programmed (in C) an instant chat server and several clients, which can talk witheach other through TCP or UDP package.Computer Security:Used PERL to program an encryption and decryption system, used symmetricencryption algorithms (triple DES) and hash check methods to make the system more secure.Artifacial Intelletence:Used Python and facial recognition research results to build a self-learningfacial recognition system, which can recognize different kinds of human faces and emotions.Advanced Database:Used C++ to develop a mini-database with extendable hashing index.Computer Graphics:Design and implementation of graphical user interfaces(GUI), C++ programming,2D/3D modeling and OpenGL programming.Operations Research:Project scheduling, past optimality and sensitivity analysis. Formulated the project network as a mathematical model to study the effect of changing activity time on completing the project.Parallel Computing:Used “master-slave” parallel programming paradigm on a self-learning facial recognition system to reduce the average calculating time by 60 percent.Part time projects:Nasdaq stock evaluation system〓 Used C# and EPPlus API to develop a stock scan software which can scan all Nasdaq stocks based on user’s requirement, and grab the most recent 4 year financial data from google finance. User can also use his own model to deeply analyze each selected stock.IB(Interactive Brokers) auto-trading system〓 Used C++ and IB API to develop a trading platform which can obtain specific data from IB database, user can use their own trading model to analyze the data and automatically make the trading decision.