Shravan ShahSoftware Developer - A & J Technologies IncFairfax, VA - Email me on Indeed: indeed.com/r/Shravan-Shah/be107dc4a7769fae• 4 years of Experience as a Software Engineer in IT Industry, specializing in Java/J2EE• Performed development work pertaining to Software Development Life Cycle (SDLC) and Agile practices• Supported development of new modules as well as integration with external data providers using SOAP and RESTful Web Services• Experienced in using Struts 1.x Framework to implement MVC Architecture• Experienced in using Object Relational Mapping (ORM) Frameworks such as Hibernate• Extensively experienced in working with Collections API and Inheritance models• Extensively experienced in Java 2 Platform in developing Distributed Web Applications using EJB, JDBC, JNDI, JSP, Servlets, Oracle, XML, Struts and Hibernate Frameworks• Experienced in implementing front-end using CSS/JavaScript/jQuery/AJAX• Experienced in working with Application Servers like Weblogic and JBoss• Experienced in using AOP and IOC features of Spring Framework to integrate Spring with Struts and Hibernate• Experienced in working with Amazon Web ServicesWORK EXPERIENCESoftware DeveloperA & J Technologies Inc - Richmond, VA - August 2013 to PresentEOMS (Enterprise Order Management System)This system allows computer peripheral resellers to order peripherals from wholesale distributors and supply them to businesses that are in need of computer services. This will help the distributor with sales volume analysis other analytic purposes.Responsibilities• Involved in Design Documentation using UML software to develop Sequence, Class, Data Flow, Deployment diagrams and file change charts for every validator, controller, command, .xml, and .property file used• Extensively used the Collections API, Thread API and OOP features such as inheritance, polymorphism and encapsulation• Thoroughly used the Struts MVC Framework to implement the front-end of the application• Implemented the Hibernate ORM Framework to record transactions pertaining to the system• Used SOAP based Web Services to expose functionalities to be consumed by other systems within the company• Understand and exercise Black Box compartmentalization to create a loosely coupled business logic that can be integrated within any other system using SOA• Used AOP framework to manage transactions thus creating an even more loosely coupled system with the ability to be integrated elsewhere if needed• Used multiple levels of abstraction through the Business Delegate and DAO design pattern to perform database operations• Used Stored Procedures to perform CRUD operations to prevent SQL injections that could result in dropped tables and/or corrupt database• Used ANT to deploy the system to be accessed over 50 stations for simultaneous operations￼• Used jQuery/AJAX to create asynchronous pages as well as JavaScript to create a more aesthetically pleasing Front ViewEnvironmentStruts 1.x, Hibernate 3.x, Spring 3.x, JSPs, Servlets, HTML, XML, Subversion, Weblogic 11gSoftware DeveloperSparefoot, VA - August 2012 to June 2013This application helps the finance department handle budgeting and client invoicing details. It allows categorized recording and reporting of income and expenditure across the organization. Revenues from clients are tracked by the invoicing sub-system. The budgeting system keeps track of spending on the various categories like projects, resources, marketing and other activities. There is a reporting feature to monitor the finances for each category or for the whole organization against a desired timeline. This provides management a running snapshot of the company's various activities and their finances.Responsibilities• Implemented the Hibernate ORM Framework to record transactions pertaining to the system• Used One-to-Many relations to keep track of customers and storage units• Implemented multiple layers of abstractions to hide functionalities from the end-user through the use of Business Delegate and DAO design patterns• Used Stored Procedures to perform CRUD operations to prevent SQL injections and furthermore create a secure database access• Used Spring to implement AOP framework and IOC container to reduce end-user dependency• Implemented EJB in the business logic to create a Black Box component that is loosely coupled and can be distributed in large numbers• Used Stateful beans to keep track of customer action upon logging into the system as well as shows prior history and also to keep an exhaustive transaction details• Thoroughly used the Spring MVC Framework to implement the front-end of the application• Used jQuery/AJAX to implement asynchronous pages as well as JavaScript to create a much more aesthetically pleasing front view• Implemented Spring transaction manager that handles transactions within the container through creation time defined dependency injection as well as implement read-only optimizations to reduce dirty read/repeatable read/phantom read• Used SOAP based Web Services to expose functionalities that can be consumed by other systems• Used ANT to deploy the system to be accessed over multitudes of stations performing simultaneous operationsEnvironmentStruts 1.x, Hibernate 3.x, Spring 3.x, JSPs, Servlets, HTML, XML, Github, Weblogic 10.3, Oracle, CSS, JavaScript, AJAXSoftware DeveloperInnotion Enterprise - Vienna, VA - February 2011 to June 2012The Service Workflow System was developed to record, track and resolve the service orders pertaining to different clients. It was used to manage the timeline of the repair service and also manage the job assignment aspect. The customers could use the system to track their repair orders and also get a tentative service completion date. The system was also used by the management to track and monitor individual ordersResponsibilities• Extensively used Struts MVC to create the front end of the system in a consistent and appealing manner• Thoroughly used JavaScript and jQuery and AJAX to create an aesthetically appropriate front end• Used Hibernate Query API to retrieve persistence objects and attach it to proxy objects• Thoroughly used Stored Procedures to perform CRUD operations to prevent SQL injections and increase DAO security• Used Business Delegate design pattern to hide remoteness from the client and add an extra layer of abstraction for the complex functionalities• Used SOAP based Web Services to expose functionalities for external systems to consume and utilize• Thoroughly used Spring Frameworks throughout the business and DAO layer to reduce code overhead and reduce XML volumes as well as annotations to create a much more loosely coupled systemEnvironmentSubversion - March 2003 to May 2003 x, JavaScript, AJAX, Hibernate 3.xEDUCATIONMaster's in Computer ScienceVirginia Commonwealth UniversityADDITIONAL INFORMATIONTechnical SkillsOperating SystemsWindows 7, XP, Vista, Windows 8, Mac OS, UbuntuProgramming LanguageJava (Core Java, OOP Design), JavaScript, jQueryWeb Technologies/Frameworks Struts, JSP, ServletsMiddlewareEJB, J2EE Web ServicesApplication Servers Oracle Weblogic, JBossIDEEclipse LunaRepositories GithubMarkup LanguagesHTML, XML, SOAP, WSDLORM ToolsHibernate 3.xDeployment Tools ANTTesting Tools (Debugging) JunitDatabase Query Language SQL, HQL