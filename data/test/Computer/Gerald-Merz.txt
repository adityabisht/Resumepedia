Gerald MerzSoftware Systems Engineer (embedded real-time systems)Bellevue, WA - Email me on Indeed: indeed.com/r/Gerald-Merz/cd6da50d467b2608Full life cycle development experience in design, development, documentation and testing of object oriented software for real-time and embedded systems:I have over ten years of development experience in C/C++ and assembly language programming with MIPS/ ARM, Motorola, TI and Intel Processors.I have worked extensively with both VRTX and VxWorks as well as embedded Linux and WinCE.I am experienced with board level software and hardware design, development and integration test. I also have experience with hardware debug tools (EJTAG probes, ICE units, logic analyzers, etc.).Languages:High Level: C++; C; Pascal; FORTRAN IV/77Assembly: Motorola 680x0; Intel; MIPS/ARM RISC; TI 9000Operating Systems/Bus Drivers:Windows 2000; Windows NT; Linux; UNIX; SUN Solaris; DEC Ultrix; HPVRTX; VxWorks/Tornado; WinCE; Green Hills ThreadX, INTEGRITY RTOS (BSP); Nucleus PCI; PCMCIA; USB; VME; IEEE-488 (HPIB)WORK EXPERIENCESoftware Systems Engineer (Cross Platform)Boeing/Computer Science Corp - Bellevue, WA - February 2013 to PresentResponsible for providing analysis and implementation for: build, test and integration of new development environments, technologies and associated processes. Main technology focus was in the area of Linux/RTOS cross platform integration.Senior Software Engineer (Patriot)Raytheon Missile Systems/SCI Corporation - San Jose, CA - December 2007 to February 2013in accordance with DO-178B and DOD standards for C130J/CH53K communications systems. Specific responsibilities include: object-oriented design, C/C++ software development of lower layer protocol SW and Green Hills INTEGRITY RTOS BSP development for a PowerQUICC based HW platform.Responsible for designing, developing and integrating software written in assembly, C and C++ for SHARC/ Blackfin Processor family using Visual DSP++. The application is an integrated digital intercommunications system for the Patriot Upgrade; specifically, design and development of self-healing network management software. SW development in accordance with DOD standards.Senior Software EngineerHydroair Corp - Los Angeles, CA - May 2007 to December 2007Embedded SW development in accordance with DO-178B standards. Specific responsibilities include: object- oriented design, C/C++ software development, simulation, software/hardware integration and test.ï¿¼Senior Software Engineer (Staff)Honeywell Aerospace - Redmond, WA - July 2004 to March 2007FCE (Flight Control Electronics) (Contract) Assigned to Signal Processing Group for embedded SW development of Flight Control Software for Boeings new 787, developed in accordance with DO-178B using C/C++ and Matlab Simulab/Simulink modeling software.Surveillance (Staff) - Embedded SW development for Enhanced Ground Proximity Warning Systems (EGPWS), an integrated solution platform for aircraft avionics providing situational awareness in accordance with DO-178B using C/C++.Specific responsibilities included: object-oriented design, C/C++ software development, integration and test. Hardware/software interface design and tools.Emphasis on team leadership and communication skills.Software EngineerBEI Technology - October 2001 to July 2004Responsible for designing, developing and integrating software written in C/C++ for a PIC to 8051 interface used in controlling an ASIC based inertial motion sensor.Senior Software EngineerOdetics Telecom - November 1999 to October 2001 Technovare Systems (Odetics Telecom - Zyfer)Responsible for designing and developing Linux/NT FLASH based software/firmware written in C/C++ for an FPGA prototype to be implemented as a MIPS32 4Kc RISC controlled ASIC/SOC encryption processor.The Security Processor SOC implementation is similar to an integrated communications or network processor and is comprised of multiple cores for data plane handling and a control plane core (MIPS32 RISC) for out of band messaging and data plane interface configuration and control. One of chip's specific applications is for NDIS level IPSec offloading of Triple DES/Rijndael type encryption/decryption tasks normally performed by the kernel/OS to the hardware for increased performance. The MIPS32 RISC processor (as the control plane core) was selected over the ARM9 Thumb Family, MMC and Hyperstone RISC/DSP(s).Initially responsible for the design, development and testing of PCI based Linux/NT device drivers for a Security Processor prototype board consisting of data plane only FPGA based HW cores developed for a performance test of the cores in terms of encryption/decryption. The encrypted data stream was peer to peer video, with each host (Windows PC) acting as the control plane processor (i.e. the future SOC controlled by the MIPS32 4Kc).Some of the details of the development environment and duties I performed included:Writing FLASH based low-level software/firmware (startup code) for their "Security Processor" (ASIC/SOC) that consisted a MIPS32 4Kc RISC (actually a 4Km with no TLB) which controlled the ASIC/SOC encryption processor.Developing Linux/NT prototypes targeted for the SOC including: USB, PCMCIA and PCI bus versions.Specifying(/setup) development hardware/tools to include: Green Hills software development environment and combination MIPS SEAD board with MIPS32 4K core lead vehicle and a proprietary Xilinx FPGA based target board with the prototype encryption engines.Designing and developing the initial FLASH based software/firmware startup code as a foreground/background system consisting of MIPS/ASIC initialization routines, foreground ISRs and background processing/ Telemetry/BIT tasks.Evaluating(/testing) various RTOS(s) in terms of performance and usability including: VxWorks, VRTX, WinCE and HardHat Linux, Linux and ThreadX and Integrity.Adjunct Professor/InstructorPortland Community College - October 1997 to November 1999Instructor (part-time) Portland Community College: CST 109; C Programming for Electronics (Problem Solving and Program Design in C/C++)Member: Sun Developers Connection/Microsoft Developers NetworkIBM BestTeam Software Partner/IBM Business PartnerSenior Member Technical StaffNEC America Inc - September 1995 to October 1997Group leader for the TR008 group responsible for designing, developing and integrating embedded software written in C and C++ which was targeted for a Motorola 68020 system controller board. We were using a network of Linux/Sun Spark stations as the development platform, with ClearCase CM tools and Microtec compiler, linker and debug tools (RT Scope, RTSource, Xray), along with VRTX as the embedded OS (migrating later to VxWorks). The application was call processing software for an Integrated Digital Loop Carrier System.Senior Systems AnalystKlamath Medical Service Bureau - May 1992 to August 1995Responsible for the design, development and testing of applications and system software used in migrating from a legacy VAX 3400 cluster to a new Client Server based network of multi processor Compaq RAID Servers running an initial version of Linux/BSD UNIX. Software baseline was maintained and migrated using PVCS Version Manager and Tracker tools.Software Engineer (Contracts)Octel Communications - May 1988 to December 1991SYRE, NASA Ames Research Harris SemiconductorsMember Technical StaffTRW Electronic Systems Group - August 1986 to April 1988Assigned to Space Communications Division as Team Leader of a technical team responsible for PIX (Payload Integration Test Exerciser) software development. The PIX was used as a testbed for IOE payload hardware software integration on the MILSTAR Satellite Project. The integration environment (testbed) consisted of a Hewlett Packard 1000/A900 host system/backplane with (16) Motorola 68000 MSC cards used for simulating the (16) different IOE interfaces (see below). My group was responsible for the 68000 software written in C. HP 64000 workstations were utilized for initial code development and as ICE units for in-circuit emulation.Software Engineer (Staff)TRW Electronic Systems Group - June 1985 to August 1986Assigned to Space Communications Division as a contractor responsible for design, coding and testing of communications software for the MILSTAR Satellite Project. My original code development was initializationfirmware for a DSP/demodulator interface called a DDU (data detection unit) and startup code for the IOE (interface input output expander) processor. The IOE was the MILSTARs central message switch consisting of a Texas Instruments TI9000 microprocessor, a separate Westinghouse radiation hardened global memory unit (essentially a separate radiation hardened RAM card) and (16) dedicated interface processors.EDUCATIONB.S. in MathematicsIndiana UniversityA.A. in General/PhysicsModesto Junior College